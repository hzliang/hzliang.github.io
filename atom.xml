<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Kal</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hzliang.github.io/"/>
  <updated>2018-03-12T03:35:51.777Z</updated>
  <id>https://hzliang.github.io/</id>
  
  <author>
    <name>Kal</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>难分样本挖掘</title>
    <link href="https://hzliang.github.io/2018/03/12/hard-negative-mining/"/>
    <id>https://hzliang.github.io/2018/03/12/hard-negative-mining/</id>
    <published>2018-03-12T02:18:04.000Z</published>
    <updated>2018-03-12T03:35:51.777Z</updated>
    
    <content type="html"><![CDATA[<p>Let’s say I give you a bunch of images that contain one or more people, and I give you bounding boxes for each one. Your classifier will need both positive training examples (person) and negative training examples (not person).</p><p>For each person, you create a positive training example by looking inside that bounding box. But how do you create useful negative examples?</p><p>A good way to start is to generate a bunch of random bounding boxes, and for each that doesn’t overlap with any of your positives, keep that new box as a negative.</p><p>OK, so you have positives and negatives, so you train a classifier, and to test it out, you run it on your training images again with a sliding window. But it turns out that your classifier isn’t very good, because it throws a bunch of false positives (people detected where there aren’t actually people).</p><p>A hard negative is when you take that falsely detected patch, and explicitly create a negative example out of that patch, and add that negative to your training set. When you retrain your classifier, it should perform better with this extra knowledge, and not make as many false positives.</p><p><a href="https://www.pyimagesearch.com/2014/11/10/histogram-oriented-gradients-object-detection/" target="_blank" rel="noopener">pyimagesearch</a></p><p><em>Apply hard-negative mining.</em> For each image and each possible scale of each image in your negative training set, apply the sliding window technique and slide your window across the image. At each window compute your HOG descriptors and apply your classifier. If your classifier (incorrectly) classifies a given window as an object (and it will, there will absolutely be false-positives), record the feature vector associated with the false-positive patch along with the probability of the classification. This approach is called <em>hard-negative mining</em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Let’s say I give you a bunch of images that contain one or more people, and I give you bounding boxes for each one. Your classifier will 
      
    
    </summary>
    
      <category term="machine learning" scheme="https://hzliang.github.io/categories/machine-learning/"/>
    
    
      <category term="Hard negative mining" scheme="https://hzliang.github.io/tags/Hard-negative-mining/"/>
    
  </entry>
  
  <entry>
    <title>Hexo next主题配置参考文档</title>
    <link href="https://hzliang.github.io/2018/02/24/hexo/"/>
    <id>https://hzliang.github.io/2018/02/24/hexo/</id>
    <published>2018-02-24T15:23:32.000Z</published>
    <updated>2018-03-12T02:53:12.071Z</updated>
    
    <content type="html"><![CDATA[<ul><li><a href="https://segmentfault.com/a/1190000009544924#articleHeader28" target="_blank" rel="noopener">1</a></li><li><a href="https://www.dingxuewen.com/2017/03/11/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E4%B8%AA%E6%80%A7%E5%8C%96%E8%AE%BE%E7%BD%AE%E4%B8%89/" target="_blank" rel="noopener">2</a></li><li><a href="https://www.dingxuewen.com/2017/03/03/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E4%B8%AA%E6%80%A7%E5%8C%96%E8%AE%BE%E7%BD%AE%E4%BA%8C/" target="_blank" rel="noopener">3</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000009544924#articleHeader28&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https:
      
    
    </summary>
    
      <category term="前端" scheme="https://hzliang.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="Hexo" scheme="https://hzliang.github.io/tags/Hexo/"/>
    
  </entry>
  
</feed>
